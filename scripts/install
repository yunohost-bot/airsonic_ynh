#!/bin/bash

if ynh_in_ci_tests; then
	sleep 60
fi

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir"

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:www-data "$install_dir"
#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression "Configuring NGINX web server..."

# Create a dedicated NGINX config
ynh_config_add_nginx

#=================================================
# YUNOHOST MULTIMEDIA INTEGRATION
#=================================================
ynh_script_progression "Adding multimedia directories..."

ynh_multimedia_build_main_dir
ynh_multimedia_addfolder --source_dir="/home/yunohost.app/$app/Podcasts" --dest_dir="share/Podcasts"
ynh_multimedia_addfolder --source_dir="/home/yunohost.app/$app/Playlists" --dest_dir="share/Playlists"

# Allow airsonic to write into these directories
ynh_multimedia_addaccess $app

#=================================================
# ENABLE "TRANSCODE"
#=================================================
ynh_script_progression "Enabling transcode..."

### For details, see https://airsonic.github.io/docs/transcode/

mkdir -p $install_dir/transcode

if [ -x /usr/bin/ffmpeg ]; then   # Check if 'ffmpeg' is installed and executable
	ln -s /usr/bin/ffmpeg $install_dir/transcode
fi

# FIXME Not sure if 'lame' is needed ?
if [ -x /usr/bin/lame ]; then   # Check if 'lame' is installed and executable
	ln -s /usr/bin/lame $install_dir/transcode
fi

# Ensure links belong to the $app user
chown $app $install_dir/transcode

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression "Adding $app's configuration..."

ynh_config_add --template="systemd-sysconfig" --destination="/etc/default/$app"

chmod 600 "/etc/default/$app"
chown $app:$app "/etc/default/$app"

# Copy configuration file of airsonic
ynh_config_add --template="airsonic.properties" --destination="$install_dir/airsonic.properties"

chmod 600 "$install_dir/airsonic.properties"
chown $app:$app "$install_dir/airsonic.properties"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression "Configuring $app's systemd service..."

# Create a dedicated systemd config
ynh_config_add_systemd

#=================================================
# SETUP APPLICATION WITH CURL
#=================================================
ynh_script_progression "Setuping application with CURL..."

ynh_systemctl --service=$app --action="start" --log_path="$install_dir/$app.log" --wait_until="Started Application in"

# Reload Nginx
ynh_systemctl --service=nginx --action="reload"

mailadmin=$(ynh_user_get_info --username=$admin --key=mail)

#http://www.subsonic.org/pages/api.jsp
passwordAdmin="admin"
salt=$(ynh_string_random --length=8)
token=$(echo -n $passwordAdmin$salt | md5sum | awk '{print $1}')

# Installation with curl
ynh_script_progression "Finalizing installation..."

# This version number can be found here:
# https://airsonic.github.io/docs/api/
# To use the rest API, after the version 1.13.0, you have to use a "salted hash of the password"
# Doc here, part Authentication:
# http://www.subsonic.org/pages/api.jsp

VERSION="1.15.0"

# Change default admin password
new_password=$(ynh_string_random --length=8)
ynh_local_curl "/rest/changePassword.view" "u=admin" "t=$token" "s=$salt" "v=$VERSION" "c=myapp" "username=admin" "password=$new_password"

# Create admin user
passwordAdmin=$new_password
token=$(echo -n $passwordAdmin$salt | md5sum | awk '{print $1}')

ynh_local_curl "/rest/createUser.view" "u=admin" "t=$token" "s=$salt" "username=$admin" "password=a" "v=$VERSION" "c=myapp" "email=$mailadmin" "adminRole=Yes" "ldapAuthenticated=Yes" "settingsRole=Yes" "streamRole=Yes" "jukeboxRole=Yes" "downloadRole=Yes" "uploadRole=Yes" "playlistRole=Yes" "coverArtRole=Yes" "commentRole=Yes" "podcastRole=Yes" "shareRole=Yes" "videoConversionRole=Yes"

#=================================================
# USE MULTIMEDIA
#=================================================
ynh_script_progression "Using multimedia..."

ynh_systemctl --service=$app --action="stop"

# Use multimedia folder
ynh_replace --match="INSERT INTO MUSIC_FOLDER VALUES(0,'/var/music','Music'" --replace="INSERT INTO MUSIC_FOLDER VALUES(0,'/home/yunohost.multimedia/share/Music','YunoHost Music'" --file="$install_dir/db/airsonic.script"

ynh_script_progression "Restarting a systemd service..."

# Start a systemd service
ynh_systemctl --service=$app --action="start" --log_path="$install_dir/airsonic.log" --wait_until="Started Application in"

#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression "Configuring log rotation..."

# Use logrotate to manage application logfile(s)
ynh_config_add_logrotate $install_dir/$app.log

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression "Integrating service in YunoHost..."

yunohost service add $app --description="Airsonic daemon" --log="$install_dir/$app.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

# Start a systemd service
ynh_systemctl --service=$app --action="restart" --log_path="$install_dir/$app.log" --wait_until="Started Application in"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
